//-----------------------------------------------------------------------------
// Title         : Geometric
// Project       : smaller_accel
//-----------------------------------------------------------------------------
// File          : parameters.sv
// Author        : kazuki  <kazuki@kz-desk>
// Created       : 25.08.2020
// Last modified : 25.08.2020
//-----------------------------------------------------------------------------
// Description :
// 
//-----------------------------------------------------------------------------
// Copyright (c) 2020 by  This model is the confidential and
// proprietary property of  and the possession or use of this
// file requires a written license from .
//------------------------------------------------------------------------------
// Modification history :
// 25.08.2020 : created
//-----------------------------------------------------------------------------

package structures;
    
    typedef logic [31:0] float;
    typedef logic [63:0] double;
    typedef logic [15:0] int16;
    typedef logic [3:0] short;
    
    typedef struct packed {
        double xovr, yovr, zovr;
        float pos;
        int16 ix_cur, iy_cur, iz_cur;
        float start_x, start_y, start_z;
        float current_r, keep_xr, keep_yr, keep_zr;
        float step_xr, step_yr, step_zr;
        float rmin;
    } geometric;

    typedef struct packed {
        short rank_x, rank_y, rank_z; 
        short nnode_x, nnode_y, nnode_z;
        double lunit; 
        float xmin, ymin, zmin;
        float xmax, ymax, zmax;
        float xmin_local, ymin_local, zmin_local;
        float xmax_local, ymax_local, zmax_local; //float anow;
        float delta_x, delta_y, delta_z;
    } run_param;
    
    typedef struct packed {
        float  tau, etau, etaum1;
    } calculation_var;
    
    typedef struct packed {        
        float xovr, yovr, zovr; 
        short  base_id, corner_id;
    } angle_info;
    
    typedef struct packed { 
        float x, y, z; 
        float I_inHI;
    } ray_info;
    
    typedef struct packed {
        ray_info xy, yz, zx;
    } ray_face;
    
    typedef struct packed  {
        float IHI, tauHI; 
        float absorptionHI, source_funcHI; 
        // float GHI_tot, HHI_tot;
    } radiation_mesh;

    typedef struct packed {
        angle_info angle;
        radiation_mesh rmesh;
    } host_diffuse_param;

    // struct           step_func_factor { float HI[2][2];};
endpackage
       
